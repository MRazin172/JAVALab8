/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject3;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author muzzu
 */
public final class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form j
     */
    public NewJFrame() {
        initComponents();
        connect();
        load("select * from emp");
    }
    
    Connection con;
    PreparedStatement pat;
    DefaultTableModel def;
    DefaultTableModel def1;

    public void connect() {
//        try {
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            try {
//                System.out.println("Connecting to the database...");
//                Class.forName("com.mysql.cj.jdbc.Driver");
//                System.out.println("Driver loaded...");
//                //con = DriverManager.getConnection("jdbc:mysql://localhost/Student", "root", "");
//                System.out.println("Connected to the database...");
//                con = DriverManager.getConnection("jdbc:mysql://localhost/student", "root", "");
//            } catch (SQLException ex) {
//                Logger.getLogger(j.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(j.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/employee", "root", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void load(String sql) {
        try {
            pat = con.prepareStatement(sql);
            ResultSet rs = pat.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            int c;
            c = rss.getColumnCount();
            def = (DefaultTableModel) jTable1.getModel();
            def.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                for (int i = 0; i < c; i++) {
                    v.add(rs.getString("id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("email"));
                    v.add(rs.getString("number"));
                    v.add(rs.getString("country"));

                }
                def.addRow(v);
            }
            pat = con.prepareStatement(sql);
            c = rss.getColumnCount();
            def1 = (DefaultTableModel) jTable2.getModel();
            def1.setRowCount(0);
            while (rs.next()) {
                Vector v1 = new Vector();
                for (int i = 0; i < c; i++) {
                    v1.add(rs.getString("SELECT country, COUNT(*) as attendee_count FROM attendees GROUP BY country"));

                    

                }
                def1.addRow(v1);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        Searchbtn = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        Clearbtn = new javax.swing.JButton();
        txtNumber = new javax.swing.JTextField();
        Addbtn = new javax.swing.JButton();
        Exitbtn = new javax.swing.JButton();
        Editbtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Email");

        jLabel3.setText("Contact Number");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        Searchbtn.setBackground(new java.awt.Color(102, 255, 0));
        Searchbtn.setText("Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        Clearbtn.setBackground(new java.awt.Color(255, 255, 0));
        Clearbtn.setText("Clear");
        Clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearbtnActionPerformed(evt);
            }
        });

        txtNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberActionPerformed(evt);
            }
        });

        Addbtn.setBackground(new java.awt.Color(102, 255, 0));
        Addbtn.setText("Add");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        Exitbtn.setForeground(new java.awt.Color(255, 51, 51));
        Exitbtn.setText("Exit");
        Exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitbtnActionPerformed(evt);
            }
        });

        Editbtn.setText("Edit");
        Editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbtnActionPerformed(evt);
            }
        });

        Deletebtn.setText("Delete");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 153, 153));
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Attendee Management System");

        jLabel1.setText("Name");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "email", "contact number", "country"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setText("Country");

        jButton1.setText("Generate Attendee Statistics");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                    .addComponent(txtEmail)
                                    .addComponent(txtName)
                                    .addComponent(txtCountry)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Editbtn)
                                    .addComponent(Addbtn))
                                .addGap(105, 105, 105)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Exitbtn)
                                    .addComponent(Deletebtn))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addComponent(Searchbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Clearbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jButton1)))
                .addContainerGap(433, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Exitbtn)
                    .addComponent(Addbtn))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Editbtn)
                    .addComponent(Deletebtn)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Clearbtn)
                    .addComponent(Searchbtn))
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {                                          


        String srch = txtSearch.getText();

        load("select * from emp where id IN (" + srch + ")");
        JOptionPane.showMessageDialog(this, "Search Complete");
    }                                         

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void ClearbtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        load("select * from emp");
        txtSearch.setText("");
        // TODO add your handling code here:
    }                                        

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try {
            String name, email, number, country;
            name = txtName.getText();
            email = txtEmail.getText();
            number = txtNumber.getText();
            country = txtCountry.getText();
            pat = con.prepareStatement("Insert into emp(name, email, number, country)values(?,?,?,?)");
            pat.setString(1, name);
            pat.setString(2, email);
            pat.setString(3, number);
            pat.setString(4, country);
            pat.executeUpdate();
            txtName.setText("");
            txtEmail.setText("");
            txtNumber.setText("");
            txtCountry.setText("");
            txtName.requestFocus();
            load("select * from emp");
            JOptionPane.showMessageDialog(this, "Records Added");

        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }                                      

    private void ExitbtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        System.exit(0); // TODO add your handling code here:
    }                                       

    private void EditbtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        try {
    DefaultTableModel def = (DefaultTableModel) jTable1.getModel();
    int selected = jTable1.getSelectedRow();
    
    if (selected == -1) {
        JOptionPane.showMessageDialog(this, "Please select a record to update.");
        return;
    }

    int id = Integer.parseInt(def.getValueAt(selected, 0).toString());
    
    String name, email, number, country;
    name = txtName.getText();
    email = txtEmail.getText();
    number = txtNumber.getText();
    country = txtCountry.getText();

    // Validate input (you can add more validation as needed)
    if (name.isEmpty() || email.isEmpty() || number.isEmpty() || country.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.");
        return;
    }

    // Ensure that 'number' is a valid integer
    try {
        Integer.parseInt(number);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number.");
        return;
    }

    // Assuming 'con' is a valid database connection
    try (PreparedStatement pat = con.prepareStatement("update emp set name=?, email=?, number=?, country=? where id=?")) {
        pat.setString(1, name);
        pat.setString(2, email);
        pat.setString(3, number);
        pat.setString(4, country);
        pat.setInt(5, id);
        pat.executeUpdate();

        txtName.setText("");
        txtEmail.setText("");
        txtNumber.setText("");
        txtCountry.setText("");
        txtName.requestFocus();

        JOptionPane.showMessageDialog(this, "Record Updated");
        
        // Assuming 'load' method updates the table model
        load("select * from emp");
    } catch (SQLException ex) {
        // Print stack trace for better debugging
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error updating record. See logs for details.");
    }
} catch (Exception ex) {
    ex.printStackTrace();
}

    }                                       

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        def = (DefaultTableModel) jTable1.getModel();
        int selected = jTable1.getSelectedRow();
        int id = Integer.parseInt(def.getValueAt(selected, 0).toString());
        try {
            pat = con.prepareStatement("delete from emp where id = ?");
            pat.setInt(1, id);
            pat.executeUpdate();
            txtName.setText("");
            txtEmail.setText("");
            txtNumber.setText("");
            txtCountry.setText("");
            txtName.requestFocus();
            JOptionPane.showMessageDialog(this, "Records deleted");
            load("select * from emp");
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                         

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        def = (DefaultTableModel) jTable1.getModel();
        int selected = jTable1.getSelectedRow();
        int id = Integer.parseInt(def.getValueAt(selected, 0).toString());
        txtName.setText(def.getValueAt(selected, 1).toString());
        txtEmail.setText(def.getValueAt(selected, 2).toString());
        txtNumber.setText(def.getValueAt(selected, 3).toString());
        txtCountry.setText(def.getValueAt(selected, 4).toString());
    }                                    

    private void txtNumberActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                                       
try {
        // Prepare the dynamic SQL query
        String query = "SELECT country, COUNT(*) AS attendee_count FROM emp GROUP BY country";
        
        // Create a PreparedStatement
        PreparedStatement preparedStatement = con.prepareStatement(query);

        // Execute the query
        ResultSet resultSet = preparedStatement.executeQuery();

        // Process the result set
        StringBuilder resultMessage = new StringBuilder("Attendee Counts:\n");

        while (resultSet.next()) {
            String country = resultSet.getString("country");
            int attendeeCount = resultSet.getInt("attendee_count");

            // Append the information to the result message
            resultMessage.append("Country: ").append(country).append(", Attendee Count: ").append(attendeeCount).append("\n");
        }

        // Close resources
        resultSet.close();
        preparedStatement.close();

        // Display the information in a JOptionPane
        JOptionPane.showMessageDialog(this, resultMessage.toString(), "Attendee Statistics", JOptionPane.INFORMATION_MESSAGE);

    } catch (SQLException e) {
        e.printStackTrace();
        // Handle any exceptions that may occur during the process
    }
   // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Addbtn;
    private javax.swing.JButton Clearbtn;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JButton Editbtn;
    private javax.swing.JButton Exitbtn;
    private javax.swing.JButton Searchbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration                   
}
